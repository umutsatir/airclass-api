name: Deploy AirClass API

on:
    push:
        branches: [main]
    workflow_dispatch:

jobs:
    deploy:
        runs-on: ubuntu-latest

        steps:
            - uses: actions/checkout@v3

            - name: Install SSHpass
              run: sudo apt-get install -y sshpass

            - name: Deploy to server
              env:
                  SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
              run: |
                  # Accept SSH host key
                  mkdir -p ~/.ssh
                  ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

                  # Create deployment directory if it doesn't exist
                  sshpass -p "$SERVER_PASSWORD" ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "mkdir -p /var/www/html/airclass-api"

                  # Backup current version
                  sshpass -p "$SERVER_PASSWORD" ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "if [ -d '/var/www/html/airclass-api' ]; then timestamp=\$(date +%Y%m%d_%H%M%S); mv /var/www/airclass-api \"/var/www/airclass-api_backup_\$timestamp\"; fi"

                  # Create fresh directory
                  sshpass -p "$SERVER_PASSWORD" ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "mkdir -p /var/www/html/airclass-api"

            - name: Upload files to server
              env:
                  SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
              run: |
                  # Upload files using rsync with password
                  sshpass -p "$SERVER_PASSWORD" rsync -avz --delete \
                    -e "ssh -o StrictHostKeyChecking=no" \
                    --exclude '.git' \
                    --exclude '.github' \
                    --exclude 'node_modules' \
                    --exclude 'tests' \
                    --exclude 'vendor' \
                    --exclude 'uploads' \
                    --exclude 'storage/logs' \
                    --exclude 'storage/framework' \
                    --exclude 'storage/app' \
                    --exclude 'storage/bootstrap/cache' \
                    ./ ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:/var/www/html/airclass-api/

            - name: Setup server environment
              env:
                  SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
              run: |
                  sshpass -p "$SERVER_PASSWORD" ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "cd /var/www/html/airclass-api && \
                    if [ ! -f .env ]; then cp .env.example .env; fi && \
                    mkdir -p uploads/images uploads/selfies uploads/slides storage/logs storage/framework storage/app storage/bootstrap/cache && \
                    chmod -R 755 uploads storage modules && \
                    export COMPOSER_ALLOW_SUPERUSER=1 && \
                    composer install --no-dev --optimize-autoloader && \
                    ls -dt /var/www/html/airclass-api_backup_* | tail -n +6 | xargs -r rm -rf"

            - name: Verify deployment
              env:
                  SERVER_PASSWORD: ${{ secrets.SERVER_PASSWORD }}
              run: |
                  # Check if the application is running
                  if sshpass -p "$SERVER_PASSWORD" ssh -o StrictHostKeyChecking=no ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "curl -s -f https://${{ secrets.DOMAIN }}/ > /dev/null"; then
                    echo "Deployment verified successfully!"
                  else
                    echo "Deployment verification failed!"
                    exit 1
                  fi
