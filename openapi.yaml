openapi: 3.0.0
info:
    title: AirClass API
    description: API for managing classrooms, attendance, and educational resources
    version: 1.0.0
    contact:
        name: AirClass Team
        email: support@airclass.com

servers:
    - url: /airclass-api
      description: API base URL

components:
    securitySchemes:
        BearerAuth:
            type: http
            scheme: bearer
            bearerFormat: JWT

    schemas:
        ApiResponse:
            type: object
            required:
                - status
                - message
            properties:
                status:
                    type: boolean
                    description: Indicates if the request was successful
                message:
                    type: string
                    description: Response message
                data:
                    type: object
                    description: Response data (if any)
                    nullable: true

        ErrorResponse:
            type: object
            required:
                - status
                - message
            properties:
                status:
                    type: boolean
                    example: false
                message:
                    type: string
                    description: Error message

        Error:
            type: object
            properties:
                error:
                    type: string
                    description: Error message

        User:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                name:
                    type: string
                email:
                    type: string
                    format: email
                role:
                    type: string
                    enum: [student, teacher, admin]
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time

        Classroom:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                code:
                    type: string
                    description: Unique 6-digit classroom code
                teacher_id:
                    type: integer
                    format: int64
                    description: ID of the teacher who owns this classroom
                teacher_name:
                    type: string
                    description: Name of the teacher who owns this classroom
                ip:
                    type: string
                    format: ipv4
                port:
                    type: integer
                    minimum: 1
                    maximum: 65535
                status:
                    type: integer
                    enum: [0, 1]
                    description: 0 = inactive, 1 = active
                attendance_count:
                    type: integer
                    description: Number of attendance records for today
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time

        Attendance:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                user_id:
                    type: integer
                    format: int64
                attendance_session_id:
                    type: integer
                    format: int64
                    description: ID of the attendance code session
                student_name:
                    type: string
                    description: Name of the student who marked attendance
                student_email:
                    type: string
                    format: email
                    description: Email of the student who marked attendance
                classroom_code:
                    type: string
                    description: Code of the classroom
                classroom_id:
                    type: integer
                    format: int64
                    description: ID of the classroom (from attendance_code)
                teacher_id:
                    type: integer
                    format: int64
                    description: ID of the teacher who owns the classroom
                teacher_name:
                    type: string
                    description: Name of the teacher who owns the classroom
                attendance_date:
                    type: string
                    format: date
                    description: Date when attendance was marked
                attendance_code:
                    type: string
                    description: The attendance code used to mark attendance
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time

        AttendanceCode:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                code:
                    type: string
                    description: 6-character attendance code
                classroom_id:
                    type: integer
                    format: int64
                    description: ID of the classroom this code belongs to
                status:
                    type: integer
                    enum: [0, 1]
                    description: 0 = inactive, 1 = active
                expires_at:
                    type: string
                    format: date-time
                    description: Time when the code expires (in server timezone, UTC+3)
                created_at:
                    type: string
                    format: date-time
                    description: Time when the code was created (in server timezone, UTC+3)
                updated_at:
                    type: string
                    format: date-time
                    description: Time when the code was last updated (in server timezone, UTC+3)

        Image:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                classroom_id:
                    type: integer
                    format: int64
                full_path:
                    type: string
                created_at:
                    type: string
                    format: date-time

        Slide:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                classroom_id:
                    type: integer
                    format: int64
                full_path:
                    type: string
                created_at:
                    type: string
                    format: date-time

        Request:
            type: object
            properties:
                id:
                    type: integer
                    format: int64
                classroom_id:
                    type: integer
                    format: int64
                user_id:
                    type: integer
                    format: int64
                status:
                    type: string
                    enum: [pending, approved, rejected]
                user_name:
                    type: string
                user_email:
                    type: string
                created_at:
                    type: string
                    format: date-time
                updated_at:
                    type: string
                    format: date-time

paths:
    /auth/login:
        post:
            summary: User login
            tags: [Auth]
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - email
                                - password
                            properties:
                                email:
                                    type: string
                                    format: email
                                password:
                                    type: string
                                    format: password
            responses:
                "200":
                    description: Login successful
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponse"
                                    - type: object
                                      properties:
                                          data:
                                              type: object
                                              properties:
                                                  token:
                                                      type: string
                                                  user:
                                                      $ref: "#/components/schemas/User"
                "401":
                    description: Invalid credentials
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"

    /auth/register:
        post:
            summary: User registration
            tags: [Auth]
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - name
                                - email
                                - password
                                - role
                            properties:
                                name:
                                    type: string
                                email:
                                    type: string
                                    format: email
                                password:
                                    type: string
                                    format: password
                                role:
                                    type: string
                                    enum: [student, teacher, admin]
            responses:
                "201":
                    description: Registration successful
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponse"
                                    - type: object
                                      properties:
                                          data:
                                              type: object
                                              properties:
                                                  token:
                                                      type: string
                                                  user:
                                                      $ref: "#/components/schemas/User"
                "400":
                    description: Invalid input
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"

    /classroom:
        get:
            summary: Get active classrooms for current user
            tags: [Classroom]
            security:
                - BearerAuth: []
            responses:
                "200":
                    description: List of active classrooms
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponse"
                                    - type: object
                                      properties:
                                          data:
                                              type: array
                                              items:
                                                  $ref: "#/components/schemas/Classroom"
        post:
            summary: Create a new classroom
            tags: [Classroom]
            security:
                - BearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - ip
                                - port
                            properties:
                                ip:
                                    type: string
                                    format: ipv4
                                port:
                                    type: integer
                                    minimum: 1
                                    maximum: 65535
            responses:
                "201":
                    description: Classroom created successfully
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponse"
                                    - type: object
                                      properties:
                                          data:
                                              type: object
                                              properties:
                                                  classroom_id:
                                                      type: integer
                                                      format: int64
                                                  code:
                                                      type: string
        put:
            summary: Update classroom status
            tags: [Classroom]
            security:
                - BearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - id
                                - status
                            properties:
                                id:
                                    type: integer
                                    format: int64
                                status:
                                    type: boolean
                                    description: true for active, false for inactive
            responses:
                "200":
                    description: Classroom status updated successfully
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponse"
                                    - type: object
                                      properties:
                                          data:
                                              $ref: "#/components/schemas/Classroom"
        delete:
            summary: Delete a classroom
            tags: [Classroom]
            security:
                - BearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - id
                            properties:
                                id:
                                    type: integer
                                    format: int64
            responses:
                "200":
                    description: Classroom deleted successfully
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ApiResponse"

    /classroom/join:
        post:
            summary: Join a classroom using a classroom code
            description: |
                Join a classroom using a 6-character alphanumeric classroom code.
                Only students can join classrooms.
                Students can only be in one active classroom at a time.
                The classroom must be active and the code must be valid.
            tags: [Classroom]
            security:
                - BearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - code
                            properties:
                                code:
                                    type: string
                                    pattern: "^[A-Za-z0-9]{6}$"
                                    description: 6-character alphanumeric classroom code
            responses:
                "201":
                    description: Successfully joined classroom
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponse"
                                    - type: object
                                      properties:
                                          data:
                                              type: object
                                              properties:
                                                  classroom:
                                                      type: object
                                                      properties:
                                                          id:
                                                              type: integer
                                                              format: int64
                                                          code:
                                                              type: string
                                                          teacher_name:
                                                              type: string
                                                          ip:
                                                              type: string
                                                              format: ipv4
                                                          port:
                                                              type: integer
                                                              minimum: 1
                                                              maximum: 65535
                                                          student_count:
                                                              type: integer
                                                          created_at:
                                                              type: string
                                                              format: date-time
                "400":
                    description: Invalid classroom code format or already a member
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
                "403":
                    description: Unauthorized - Only students can join classrooms or already in another classroom
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
                "404":
                    description: Classroom not found or inactive
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"

    /classroom/leave:
        post:
            summary: Leave current classroom
            description: |
                Leave the current active classroom.
                Only students can leave classrooms.
                Sets the student's status to inactive (0) in the classroom_student table.
            tags: [Classroom]
            security:
                - BearerAuth: []
            responses:
                "200":
                    description: Successfully left classroom
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ApiResponse"
                "403":
                    description: Unauthorized - Only students can leave classrooms
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
                "404":
                    description: No active classroom found
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"

    /attendance:
        get:
            summary: Get attendance records
            description: |
                Get attendance records for a classroom. Teachers can only view their own classrooms.
                Can filter by either classroom_id or classroom code.
                Returns detailed attendance information including student and teacher details,
                and the attendance code used.
            tags: [Attendance]
            security:
                - BearerAuth: []
            parameters:
                - name: classroom_id
                  in: query
                  schema:
                      type: integer
                      format: int64
                  description: Filter by classroom ID
            responses:
                "200":
                    description: List of attendance records
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponse"
                                    - type: object
                                      properties:
                                          data:
                                              type: object
                                              properties:
                                                  total_students:
                                                      type: integer
                                                      description: Total number of students who marked attendance
                                                  attendance_list:
                                                      type: array
                                                      items:
                                                          $ref: "#/components/schemas/Attendance"
                "400":
                    description: Missing required parameter (classroom_id or code)
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
                "403":
                    description: Unauthorized to view this classroom's attendance
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
        post:
            summary: Mark attendance using code
            description: |
                Mark attendance for a classroom using an attendance code.
                Only students can mark attendance.
                The code must be valid and not expired (5 minutes from creation).
                Students can only mark attendance once per day per classroom.
                Uses database transactions and row locking to ensure data consistency.
                The attendance code is automatically invalidated when all students have marked attendance.
                All times are in server timezone (UTC+3).
            tags: [Attendance]
            security:
                - BearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - classroom_id
                                - code
                            properties:
                                classroom_id:
                                    type: integer
                                    format: int64
                                    description: ID of the classroom
                                code:
                                    type: string
                                    description: 6-character attendance code
            responses:
                "201":
                    description: Attendance marked successfully
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponse"
                                    - type: object
                                      properties:
                                          data:
                                              type: object
                                              properties:
                                                  attendance_id:
                                                      type: integer
                                                      format: int64
                                                      description: ID of the created attendance record
                                                  attendance_code:
                                                      type: string
                                                      description: The attendance code used
                "400":
                    description: Invalid or expired code
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
                "403":
                    description: Unauthorized - Only students can mark attendance or already marked attendance for today
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
                "500":
                    description: Database error or transaction failure
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"

    /attendance/code:
        post:
            summary: Generate attendance code
            description: |
                Generate a new attendance code for a classroom.
                Only teachers can generate codes for their own active classrooms.
                Only one active code is allowed per classroom.
                Codes expire after the specified time (default 60 seconds, max 1 hour).
                All times are in server timezone (UTC+3).
                Verifies classroom ownership and active status before generating code.
            tags: [Attendance]
            security:
                - BearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - classroom_id
                            properties:
                                classroom_id:
                                    type: integer
                                    format: int64
                                    description: ID of the classroom
                                expires_in:
                                    type: integer
                                    minimum: 1
                                    maximum: 3600
                                    default: 60
                                    description: Expiration time in seconds (max 3600 seconds / 1 hour)
            responses:
                "201":
                    description: Attendance code generated successfully
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponse"
                                    - type: object
                                      properties:
                                          data:
                                              type: object
                                              properties:
                                                  code:
                                                      type: string
                                                      description: 6-character attendance code
                                                  classroom_id:
                                                      type: integer
                                                      format: int64
                                                      description: ID of the classroom
                                                  expires_at:
                                                      type: string
                                                      format: date-time
                                                      description: Time when the code expires (in server timezone, UTC+3)
                                                  expires_in:
                                                      type: string
                                                      description: Human-readable expiration time (e.g., "30 seconds" or "2 minutes")
                "400":
                    description: Invalid classroom, classroom is not active, or invalid expiration time
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
                "403":
                    description: Unauthorized - Only teachers can generate codes or already has an active code
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"

    /image:
        get:
            summary: Get images
            description: Retrieve images for a classroom or by ID
            security:
                - BearerAuth: []
            parameters:
                - name: classroom_id
                  in: query
                  description: ID of the classroom to get images from
                  schema:
                      type: integer
                      format: int64
                - name: id
                  in: query
                  description: ID of a specific image to retrieve
                  schema:
                      type: integer
                      format: int64
            responses:
                "200":
                    description: Images retrieved successfully
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponse"
                                    - type: object
                                      properties:
                                          data:
                                              type: array
                                              items:
                                                  $ref: "#/components/schemas/Image"
                "400":
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
                "401":
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"

        post:
            summary: Upload a selfie
            description: Upload a selfie image for attendance verification. Only students can upload selfies.
            security:
                - BearerAuth: []
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            required:
                                - image
                                - classroom_id
                            properties:
                                image:
                                    type: string
                                    format: binary
                                    description: The selfie image file (JPG or PNG, max 5MB)
                                classroom_id:
                                    type: integer
                                    format: int64
                                    description: ID of the classroom to upload the selfie to
            responses:
                "201":
                    description: Selfie uploaded successfully
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponse"
                                    - type: object
                                      properties:
                                          data:
                                              type: object
                                              properties:
                                                  image_id:
                                                      type: integer
                                                      format: int64
                                                      description: ID of the uploaded image
                                                  path:
                                                      type: string
                                                      description: Relative path to the uploaded image
                "400":
                    description: Bad request (invalid file type, size, or missing fields)
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
                "401":
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
                "403":
                    description: Forbidden (not a student or not a member of the classroom)
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"

    /slide:
        get:
            summary: List slides
            tags: [Slide]
            security:
                - BearerAuth: []
            parameters:
                - name: classroom_id
                  in: query
                  schema:
                      type: integer
                  description: Filter by classroom ID
                - name: id
                  in: query
                  schema:
                      type: integer
                  description: Filter by slide ID
            responses:
                "200":
                    description: List of slides
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponse"
                                    - type: object
                                      properties:
                                          data:
                                              type: array
                                              items:
                                                  $ref: "#/components/schemas/Slide"
        post:
            summary: Upload slide
            tags: [Slide]
            security:
                - BearerAuth: []
            requestBody:
                required: true
                content:
                    multipart/form-data:
                        schema:
                            type: object
                            required:
                                - classroom_id
                                - slide
                            properties:
                                classroom_id:
                                    type: integer
                                slide:
                                    type: string
                                    format: binary
            responses:
                "201":
                    description: Slide uploaded
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponse"
                                    - type: object
                                      properties:
                                          data:
                                              type: object
                                              properties:
                                                  slide_id:
                                                      type: integer
                                                  path:
                                                      type: string

    /request:
        get:
            summary: List requests
            tags: [Request]
            security:
                - BearerAuth: []
            parameters:
                - name: classroom_id
                  in: query
                  schema:
                      type: integer
                  description: Filter by classroom ID
                - name: id
                  in: query
                  schema:
                      type: integer
                  description: Filter by request ID
            responses:
                "200":
                    description: List of requests
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponse"
                                    - type: object
                                      properties:
                                          data:
                                              type: array
                                              items:
                                                  $ref: "#/components/schemas/Request"
                "400":
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
                "401":
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
        post:
            summary: Create request
            tags: [Request]
            security:
                - BearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - classroom_id
                            properties:
                                classroom_id:
                                    type: integer
                                    description: ID of the classroom to create request for
            responses:
                "201":
                    description: Request created
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponse"
                                    - type: object
                                      properties:
                                          data:
                                              type: object
                                              properties:
                                                  request_id:
                                                      type: integer
                                                  status:
                                                      type: string
                                                      enum: [pending]
        put:
            summary: Update request
            tags: [Request]
            security:
                - BearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - id
                                - status
                            properties:
                                id:
                                    type: integer
                                status:
                                    type: string
                                    enum: [approved, rejected]
            responses:
                "200":
                    description: Request updated
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ApiResponse"
        delete:
            summary: Delete request
            tags: [Request]
            security:
                - BearerAuth: []
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            required:
                                - id
                            properties:
                                id:
                                    type: integer
            responses:
                "200":
                    description: Request deleted
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ApiResponse"

    /request/check:
        get:
            summary: Check request status
            description: Check if the current student has an active approved request for a classroom
            tags: [Request]
            security:
                - BearerAuth: []
            parameters:
                - name: classroom_id
                  in: query
                  required: true
                  schema:
                      type: integer
                  description: ID of the classroom to check request status for
            responses:
                "200":
                    description: Request status checked successfully
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: "#/components/schemas/ApiResponse"
                                    - type: object
                                      properties:
                                          data:
                                              type: object
                                              properties:
                                                  has_active_request:
                                                      type: boolean
                                                      description: Whether the student has an active approved request
                "400":
                    description: Bad request (missing classroom_id)
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
                "401":
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"
                "403":
                    description: Forbidden (not a student)
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/ErrorResponse"

tags:
    - name: Auth
      description: Authentication endpoints
    - name: Classroom
      description: Classroom management endpoints
    - name: Attendance
      description: Attendance management endpoints
    - name: Image
      description: Image management endpoints
    - name: Slide
      description: Slide management endpoints
    - name: Request
      description: Request management endpoints
